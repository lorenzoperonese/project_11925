INIZIALIZZAZIONE
@256 D=A @SP M=D

-PUSH	->  ... @SP M=M+1 A=M-1 M=D
 constant: @[n] D=A
 local: @LCL D=M @[n] A=D+A D=M
 static: @input.[n] D=M
 argument: @ARG D=M @[n] A=D+A D=M

-POP ->   ... @R13 M=D @SP AM=M-1 D=M @R13 A=M M=D
 local: @LCL D=M @[n] D=D+A
 static: @input.[n] D=A
 argument: @ARG D=M @[n] D=D+A

ATTENZIONE: $count Ã¨ una variabile contatore, ogni volta che viene usata (comparazione o funzioni) va sempre incrementata

-OPERAZIONI
 add/sub: @SP MD=M-1 A=D D=M A=A-1 M=M[+/-]D
 neg: @SP A=M-1 M=-M
 eq/gt/lt: @SP MD=M-1 A=D D=M A=A-1 M=M-D D=M @[$count] D;[JEQ/JGT/GLT] D=0 @[$count] 0;JMP ($count0) D=-1 ($count1) @SP A=M-1 M=D
 and/or: @SP MD=M-1 A=D D=M A=A-1 M=M[&/|]D
 not: @SP A=M-1 M=!M

-FUNZIONI
 function: ([funct_name]) {@0 D=A @SP M=M+1 A=M-1 M=D} -> {for(int i=0;i<variabili_locali;i++)}
 call: @$count D=A @SP M=M+1 A=M-1 M=D @LCL D=M @SP M=M+1 A=M-1 M=D @ARG D=M @SP M=M+1 A=M-1 M=D @THIS D=M @SP M=M+1 A=M-1 
M=D @THAT D=M @SP M=M+1 A=M-1 M=D @SP D=M @[5+num_arguments] D=D-A @ARG M=D @SP D=M @LCL M=D @[funct_name] 0;JMP ($count)
 return: @LCL D=M @R14 M=D @5 A=D-A D=M @R15 M=D @ARG D=M @R13 M=D @SP AM=M-1 D=M @R13 A=M M=D @ARG D=M+1 @SP M=D @R14 D=M
@1 A=D-A D=M @THAT M=D @R14 D=M @2 A=D-A D=M @THIS M=D @R14 D=M @3 A=D-A D=M @ARG M=D @R14 D=M @4 A=D-A D=M @LCL M=D
@R15 A=M 0;JMP

-PROGRAM FLOW
 label: ([$label_name])
 goto: @[$label_name] 0;JMP
 if-goto: @SP AM=M-1 D=M @[$label_name] D;JNE

